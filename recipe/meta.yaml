{% set version = "1.19.5" %}

package:
  name: numpy
  version: {{ version }}

source:
  url: https://github.com/numpy/numpy/releases/download/v{{ version }}/numpy-{{ version }}.tar.gz
  sha256: d1654047d75fb9d55cc3d46f312d5247eec5f4999039874d2f571bb8021d8f0b
  patches:
    - cblas.diff

build:
  number: 3
  skip: true  # [py>39]
  entry_points:
    - f2py = numpy.f2py.f2py2e:main  # [win]
  run_exports:
    - {{ pin_subpackage("numpy") }}

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - {{ compiler('c') }}
  host:
    - python
    - pip
    - cython
    - libblas
    - libcblas
    - liblapack
  run:
    - python
  run_constrained:
    # enforce eviction of package from anaconda defaults
    - numpy-base <0a0

{% set tests_to_skip = "_not_a_real_test" %}
# behaviour change in lapack/openblas, see
# https://github.com/numpy/numpy/issues/18914
{% set tests_to_skip = tests_to_skip + " or (test_linalg and TestCond and test_nan)" %}
# Seems to fail with current version of glibc for large numbers
# https://github.com/numpy/numpy/issues/15179
{% set tests_to_skip = tests_to_skip + " or test_sincos_float32" %}                    # [linux64]
# https://github.com/numpy/numpy/issues/15243
{% set tests_to_skip = tests_to_skip + " or test_loss_of_precision[complex256]" %}     # [ppc64le]
# Probably needs too much memory on ppc64le, it sometimes fails on travis
{% set tests_to_skip = tests_to_skip + " or test_large_archive or test_big_arrays" %}  # [ppc64le]
# the following skips are the longest running tests at time of writing; all over 45sec, up to 750sec
# skipping is done purely to stop pypy jobs from regularly timing out on drone/travis
{% if (aarch64 or ppc64le) and (python_impl == "pypy") %}
    {% set tests_to_skip = tests_to_skip + " or test_may_share_memory_easy_fuzz or test_may_share_memory_harder_fuzz"
                                         + " or test_binary_ufunc_1d_manual or test_diophantine_fuzz"
                                         + " or test_unary_ufunc_call_fuzz or test_unary_gufunc_fuzz"
                                         + " or test_big_arrays or test_large_archive or test_large_zip"
                                         + " or test_closing_fid or test_iter_buffered_reduce_reuse"
                                         + " or test_count_nonzero_all or test_divmod_128_64"
                                         + " or (test_generalized_sq_cases "
                                         + "     and (TestCond or TestDet or TestInv or TestSolve))" %}
{% endif %}

test:
  requires:
    - pytest
    - pytest-timeout
    - pytest-xdist
    - hypothesis
    - setuptools
  commands:
    - f2py -h
    # numpy.test will show SIMD features of agent (in the past, there have been
    # failures that occured depending on presence/absence of e.g. AVX512);
    # for signature of numpy.test see the following (note default: label='fast'),
    # https://github.com/numpy/numpy/blob/maintenance/1.19.x/numpy/_pytesttester.py#L78-L79
    {% set param = "verbose=1, label='full', tests=None" %}
    {% set extra = "extra_argv=['-k', 'not (" + tests_to_skip + ")', '-nauto', '--timeout=600', '--durations=50']" %}
    - python -c "import numpy, sys; sys.exit(not numpy.test({{ param }}, {{ extra }}))"  # [not ppc64le]
    # NOTE: test suite is skipped on ppc due to bugs in QEMU code that cause
    # CI to fail, even though the tests would run through on native hardware
  imports:
    - numpy
    - numpy.core.multiarray
    - numpy.core._multiarray_tests
    - numpy.core.numeric
    - numpy.core._operand_flag_tests
    - numpy.core._struct_ufunc_tests
    - numpy.core._rational_tests
    - numpy.core.umath
    - numpy.core._umath_tests
    - numpy.linalg.lapack_lite
    - numpy.random.mtrand


about:
  home: http://numpy.scipy.org/
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: Array processing for numbers, strings, records, and objects.
  doc_url: https://docs.scipy.org/doc/numpy/reference/
  dev_url: https://github.com/numpy/numpy

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - pelson
    - rgommers
    - ocefpaf
    - isuruf
    - xhochy
